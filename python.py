# -*- coding: utf-8 -*-
"""python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-i44YLENGeZXWTiEA3VNUj31bdU0UihS

# ตัวอย่างการเขียน python
"""

print("hello world")
print(2+3)
print(2561-543)
print(9*1024)
print(1024/7)
print(10**2)
print(2**10)
print(100**0.5)
print( (2*3 + 3*3 + 1*3 + 2*3 + 2*3)/(3+3+3+3) )

print('ผลลัพธ์ ', 2**20)
print('สวัสดีคุณ', 'พอล')
print('สวัสดีคุณ'+'พอล')
print('สวัสดีคุณ'+str(2**20))

def hello(): #สร้างตัวแปรขึ้นมาเก็บข้อมูล
    print('Hello world') #ใส่ข้อมูลที่ต้องการเก็บ
    print("Hello world")
    print('สวัสดีชาวโลก')
    print("สวัสดีชาวโลก")
hello() #ตอนเรียกใช้

def print9():
    print(' 9x1 =  9')
    print(' 9x2 = 18')
    print(' 9x3 = 27')
    print(' 9x4 = 36')
    print(' 9x5 = '+str(9*5))
    print(' 9x6 = ', 9*6)
print9()

"""# Calculate การคำนวณ

Number ตัวเลข
"""

2+2

50 - 5*6

8 / 5 # division always returns a floating point number

17 / 3 # classic division returns a float

17 // 3 # floor division discards the fractional part

17 % 3 # the % operator returns the remainder of the division

5 * 3 + 2 # result * divisor + remainde

5 ** 2 # 5 squared

2 ** 7 # 2 to the power of 7

a, b = 0, 1
while a < 1000:
    print(a, end=',')
    a, b = b, a+b

num1 = 2586
num2 = 4658

print("num1 มีค่าภายในเป็น ", num1)
print("num2 มีค่าภายในเป็น ", num2)
print("num1*num2 = ", num1*num2)

"""# Operators (เครื่องหมาย)"""

x = 4
y = 11

a1 = x + y #บวก
a2 = x - y #ลบ
a3 = x * y #คูณ
a4 = x / y #หาร
a5 = x % y #เศษของการหาร หรือ ที่เรียกว่า mod นั่นเอง
a6 = x ** y #ยกกำลัง
a7 = x // y #หารปัดเศษทิ้ง

a8 = (x + 1) * (y - 1)
print(a5)

x = x + 3  #สามารถย่อในรูปสั้นๆได้ดังข้างล่าง
x += 3 #บวกค่า X = 3

"""ด้านการเปรียบเทียบ"""

x = 8
y = 4

a1 = x > y #มากกว่า
a2 = x >= y #มากกว่าหรือเท่ากับ

a3 = x < y #น้อยกว่า
a4 = x <= y #น้อยกว่าหรือเท่ากับ

a5 = x == y #มีค่าเท่ากับ
a6 = x != y #ไม่เท่ากับ

print(a5)

"""การเปรียบเทียบทางตรรกศาสตร์"""

p = True #True = 1
q = False #False = 0
r = True

a1 = p and q #และ ต้องมีค่าเป็น จริง(True) ทั้ง 2 ตัวแปร ถึงจะได้ค่าเป็น จริง
a2 = p or q #หรือ ค่าใดค่าหนึ่งเป็น จริง ผลที่ออกมาก็จะเป็น จริง
a3 = not q #ไม่ ให้ค่าที่ตรงข้าม จาก จริง เป็น เท็จ

a4 = p and q

print(a4)

"""# Conditions (ตรวจสอบเงื่อนไข)"""

score = 89

if score >= 80: #อย่าเลยปิดท้าย
  print('เกรด 4')
  print('สุดยอด')
elif score >= 75: #elif ย่อมาจาก else if
  print('เกรด 3.5')
elif score >= 70: 
  print('เกรด 3')
elif score >= 65: 
  print('เกรด 2.5')
elif score >= 60: 
  print('เกรด 2')
elif score >= 55: 
  print('เกรด 1.5')
elif score >= 50: 
  print('เกรด 1')
else:
  print('เกรด 0')

"""# Loops (วนลูป)

จากเริ่มต้นที่ไม่มี loop
"""

number = 1
double = number * 2
print(number)

number = 2
double = number * 2
print(number)

number = 3
double = number * 2
print(number)

"""เปลี่ยนจากข้างบน เพิ่ม loop เข้ามาก็จะได้แบบนี้"""

for i in range(1, 4): #range(ใส่ตัวเลขเพื่อกำหนดลำดับข้อมูล รับค่ากี่ครั้ง) เป็นตัวลิมิตไม่ให้เกินกว่าที่กำหนด สามารถกำหนดตัวเริ่มต้นได้ เช่่น (1, 3)
  print(i)

for i in range(0, 10):
  print(i)

a = list(range(10))
print(a)

a = 65
print(chr(a))

for i in list(range(90, 64, -1)):
  print(chr(i))

"""คำสั่งเพิ่มเติมใน loop"""

for i in range(1, 7):
  if i % 3 == 0:
    # continue #สั่งให้ข้าม
    break #สั่งหยุดทันที
  print(double)

"""# Functions (ฟังก์ชั่น)"""

width = 4 #@param {type:"integer"}
length = 5 #@param {type:"integer"}
heigth = 8 #@param {type:"integer"}
def get_box_area(): #สร้างฟังก์ชั่นขึ้นมาใช้เอง เพื่อให้ง่ายต่อการใช้งาน
  box_area = width * length * heigth
  print(box_area)

get_box_area() #เรียกใช้ฟังก์ชั่นที่สร้าง

"""พารามิเตอร์"""

variable_name = 4 #@param {type:"integer"}
def get_box_area(width, length, height): #กำหนดพารามิเตอร์ เพื่อไม่ให้ฟังก์ชั่นกำหนดค่าให้
  if width < 0 or length < 0 or height < 0:
    return 0
  box_area = width * length * height
  print(box_area)
  return (box_area) #ส่งค่าย้อนกลับ

box1 = get_box_area(4, 4, 2)
# get_box_area(4, -4, 2) #ใส่ค่าให้ตรงตามที่กำหนดพารามิเตอร์ไว้
# get_box_area(width=8, length=4, height=2) #ใส่ค่าให้ตรงตามที่กำหนดพารามิเตอร์ไว้

print(box1)

"""คำนวณหาค่า logic ว่าเป็น True หรือ False จากการลำดับสมการดังนี้
p = T
q = F
r = F
s = T
t = F

((p or r and r) and (not t and not r) or (not p and q) and (s and not s or s)) and s and not t
"""

p = True
q = False
r = False
s = True
t = False

((p or r and r) and (not t and not r) or (not p and q) and (s and not s or s)) and s and not t

"""# Modules (แบ่งโค้ดเป็นส่วนย่อยๆ)"""

def get_circle_area(radius):
  return 22/7 * (radius ** 2)

def get_triangle_area(width, height):
  return 1/2 * width * height

def get_rectangle_area(width, height):
  return width * height

circle = get_circle_area(10)
print(circle)

import shape #สามารถตั้งชื่อใหม่ได้ โดยการใส่ as ตามด้วยชื่อที่ต้องการตั้งใหม่

circle = shape.get_circle_area(10)
print(circle)

triangle = shape.get_triangle_area(10, 6)
print(triangle)

"""1.ให้เขียนฟังก์ชั่นแสดงตัวเลขตั้งแต่ 0-9 โดยใช้ loop

2.ให้เขียนฟังก์ชั่นแสดงตัวอักษร A-Z

3.ให้เขียนฟังก์ชั่นแสดงตัวอักษร Z-A

# New Section
"""

i = 0
while i < 10:
    print(i)
    if i == 9:
      break
    i += 1

from string import ascii_uppercase as auc
for i in auc:
    print(f"{i}")

alphabat = 'ABCD'
for i in alphabat:
  print(i)

for i in reversed(range(65,91)):
  alpha = i
  print(chr(i))

for i in range(65,91):
   print(chr(i))

for i in list(range(90, 64, -1)):
  print(chr(i))

name = "jame"

if name in ["jame","north","mark"]:
  print("สวัสดีคุณ", name)
else:
  print("ใครอ่ะ คุณเป็นใคร")

"""เขียนฟังก์ชั่น loop ซ้อน loop"""

a = 0

while(a <= 7):
  b = a + 1
  while(b <= 8):
    c = b + 1
    while(c <= 9):
      print(a, b, c)
      c += 1
    b += 1
  a += 1

"""# exercies

Input
"""

a = "" #@param {type:"string"}
print(a)

date = "2022-11-30" #@param {type:"date"}
print(date)

p = True #@param {type:"boolean"}
q = False #@param {type:"boolean"}
a = not (p and q)
print(a)

a = True #@param {type:"boolean"}
b = False #@param {type:"boolean"}
c = True #@param {type:"boolean"}
d = True #@param {type:"boolean"}
e = False 
f = False 
g = False 
h = False 

resultAB = not (a and b)
resultCD = not (c and d)
resultEF = not (e and f)
resultGH = not (g and h)
resultABCD = not (resultAB and resultCD)
resultEFGH = not (resultEF and resultGH)

print(resultABCD)

a = True #1
b = False #0
c = True
d = False

io = not(not(a and b) and not(c and d))
ik = not(c and d)
love = not(io and ik)
print(io)



"""# ex.01"""

import numpy as np
a = np.array([1,2,3])
print(a)
print(type(a))
print(a[0], a[1], a[2])
a[2] = 5
print(a)